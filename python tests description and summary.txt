תיעוד בדיקות:


תיאור כללי:
הבדיקות שבוצעו נועדו להבטיח את תקינות הפונקציונליות של אפליקציית ניהול ספרים ומשתמשים. בדיקות מתיחסות לכל הפונקציות הכתובות בקובץ app.py, כולל קריאה, הוספה, עידכון, מחיקה של ספרים וכן השאלתם והחזרתם. יחד עם תרחישים חיוביים נבדקו גם תרחישים שליליים אפשריים.


תרחישי בדיקות:


בדיקות קריאת נתונים (GET)
פונקציות:
test_get_books
test_get_users
תרחישי בדיקה - בדיקת קריאה של רשימת ספרים ורשימת משתמשים:
וידוא שמספר הספרים/ משתמשים שהוחזר תואם למספר בפועל במערכת
וידוא שכל ספר ברשימה תואם למידע שנשמר


חשיבות: להבטיח שהמערכת מספקת את הנתונים בצורה תקינה, כולל נתונים חדשים שנשמרו.


בדיקת הוספת ספרים (POST)
פונקציות:
test_add_book
test_add_book_fail
תרחישים:
חיובי
ניתן להוסיף ספר עם שדות מלאים
נתונים חדשים נשמרים במערכת
שלילי
נסיון להוסיף ספר עם כותרת ריקה
נסיון להוסיף ספר עם שם מחבר ריק
וידוא שמתקבלת הודעת שגיאה מתאימה
וידוא שנתונים לא נשמרים במערכת


חשיבות: מניעת הוספה של ספרים עם נתונים לא תקינים


בדיקת עידכון ספרים (PUT)
פונקציות:
test_update_book
test_update_book_fail
תרחישים:
חיובי
ניתן לעדכן ספר קיים
הנתונים נשמרים במערכת
שלילי
ניסיון לעדכן ספר שאינו קיים
ניסיון לעדכן ספר עם כותרת ריקה (הוספתי את הבדיקה, אף על פי שלפי הקובץ המקורי כן ניתן לעשות זאת, לכן הטסט נופל)
ניסיון לעדכן ספר עם שם מחבר ריק (הוספתי את הבדיקה, אף על פי שלפי הקובץ המקורי כן ניתן לעשות זאת, לכן הטסט נופל)
הערה: לפי הקוד הכתוב בקובץ app.py, כן ניתן לעדכן ספר עם כותרת ריקה או שם מחבר ריק. לפי הלוגיקה של פונקציית הוספה, גם בעידכון לא ניתן להזין כותרת או שם מחבר ריקים, לכן הוספתי את הבדיקה. זאת גם הסיבה שטסט נופל.


בדיקת מחיקת ספרים (DELETE)
פונקציות:
test_delete_book
test_delete_book_fail
תרחישים:
חיובי
ניתן למחוק ספר קיים
המידע נשמר, הספר שנמחק אינו קיים יותר במערכת
שלילי
ניסיון למחוק ספר שאינו קיים במערכת


בדיקת מחיקת והוספת ספר (DELETE, POST)
פונקציות:
test_add_book_after_delete
תרחישים:
תרחיש ייחודי שנועד לבדוק שלאחר שהספר נמחק לא ניתן להוסיף ספר חדש עקב חישוב ייחודי של מזהה (ID). המזהה מחושב ע"י הוספה של אחד לאורך המערך של ספרים. דוגמא: אם האורך הוא 2, ומוחקים את הספר עם מזהה 1, אז בהוספת ספר הבא נקבל ספר עם מזהה 2 (אורך הוא 1 פלוס 1) ואז למעשה נקבל מצב בו רוצים להוסיף ספר חדש עם מזהה שכבר קיים.


חשיבות: למנוע מחיקת ספר בשוגג, וידוא תקינות המערכת לאחר מחיקה, כולל שמירה על מזהה ייחודי.


בדיקת השאלת ספרים (POST)
פונקציות:
test_borrow_book
test_borrow_book_fail
תרחישים:
חיובי
וידוא השאלת ספר ע"י משתמש קיים
סימון הספר כמושאל
שלילי
ניסיון השאלה ע"י משתמש לא קיים
ניסיון השאלת ספר לא קיים
ניסיון השאלת ספר שכבר מושאל


בדיקת החזרת ספרים (POST)
פונקציות:
test_return_book
test_return_book_fail
תרחישים:
חיובי
החזרת ספר
וידוא שהספר לא מושאל
וידוא שהספר לא נמצא ברשימת ספרים של משתמש
שלילי
ניסיון להחזיר ספר שאינו מושאל
ניסיון להחזיר ספר למשתמש שאינו קיים


חשיבות:
עידכון סטטוס הספרים במערכת, מניעת שגיאות שבהן ספרים מסומנים כלא מושאלים למרות שבפועל הם כן.


חשיבות הבדיקות:
לסיכום ניתן לומר, כי הבדיקות שבוצעו כוללות תרחישים מקיפים שמבטיחים את יציבות המערכת, מניעת שגיאות ושמירה על נתונים תקינים. חשוב לציין, כי בדיקות שליליות לא פחות חשובות מבדיקות חיוביות, כי הם מספקים הגנה מפני פעולות בלתי צפויות שעלולות לפגוע בתפקוד המערכת או במשתמשים.
הבדיקות מוודאות שהמערכת:
מתמודדת עם קלטים תקינים ושגויים
מחזירה הודעותשגיאה ברורות
הנתונים נשמרים בצורה תקינה.